CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']

TEACHER_CKPT: './pretrained_model/kitti/part2/checkpoint_epoch_80.pth'
PRETRAINED_MODEL: './pretrained_model/kitti/centerpoint/checkpoint_epoch_80.pth'
PRUNING_RATE: 0.35
INHERIT: True
MEA_FILE: './measure_doc/CenterPoint_kitti.txt'

DATA_CONFIG: 
    _BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml


MODEL:
    NAME: CenterPoint
    IGNORE_PRETRAIN_MODULES: ['placeholder']

    VFE:
        NAME: MeanVFE

    BACKBONE_3D:
        NAME: VoxelBackBone8x
        WIDTH: 1.0

    MAP_TO_BEV:
        NAME: HeightCompression
        NUM_BEV_FEATURES: 256

    BACKBONE_2D:
        NAME: BaseBEVBackbone
        ACT_FN: ReLU
        NORM_TYPE: BatchNorm2d
        WIDTH: 1.0

        LAYER_NUMS: [5, 5]
        LAYER_STRIDES: [1, 2]
        NUM_FILTERS: [128, 256]
        UPSAMPLE_STRIDES: [1, 2]
        NUM_UPSAMPLE_FILTERS: [256, 256]

    DENSE_HEAD:
        NAME: CenterHead
        CLASS_AGNOSTIC: False
        ACT_FN: ReLU
        NORM_TYPE: BatchNorm2d

        CLASS_NAMES_EACH_HEAD: [
            ['Car', 'Pedestrian', 'Cyclist']
        ]

        SHARED_CONV_CHANNEL: 64
        USE_BIAS_BEFORE_NORM: True
        NUM_HM_CONV: 2
        NUM_IOU_CONV: 2
        SEPARATE_HEAD_CFG:
            HEAD_ORDER: ['center', 'center_z', 'dim', 'rot']
            HEAD_DICT: {
                'center': {'out_channels': 2, 'num_conv': 2},
                'center_z': {'out_channels': 1, 'num_conv': 2},
                'dim': {'out_channels': 3, 'num_conv': 2},
                'rot': {'out_channels': 2, 'num_conv': 2},
            }

        TARGET_ASSIGNER_CONFIG:
            FEATURE_MAP_STRIDE: 8
            NUM_MAX_OBJS: 500
            GAUSSIAN_OVERLAP: 0.1
            MIN_RADIUS: 2

        LOSS_CONFIG:
            LOSS_WEIGHTS: {
                'cls_weight': 1.0,
                'loc_weight': 2.0,
                'iou_weight': 0.1,
                'code_weights': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
            }

        POST_PROCESSING:
            POST_IOU_THRESH: 0.1
            SCORE_THRESH: 0.1
            POST_CENTER_LIMIT_RANGE: [0, -40, -3, 70.4, 40, 1]
            MAX_OBJ_PER_SAMPLE: 500
            NMS_CONFIG:
                NMS_TYPE: nms_gpu
                NMS_THRESH: 0.1
                NMS_PRE_MAXSIZE: 4096
                NMS_POST_MAXSIZE: 500

    POST_PROCESSING:
        RECALL_THRESH_LIST: [ 0.3, 0.5, 0.7 ]
        SCORE_THRESH: 0.1
        OUTPUT_RAW_SCORE: False

        EVAL_METRIC: kitti
        EVAL_CLASSES: {
            'BEV': [ 'Car_bev/moderate_R40', 'Pedestrian_bev/moderate_R40', 'Cyclist_bev/moderate_R40' ],
            '3D': [ 'Car_3d/moderate_R40', 'Pedestrian_3d/moderate_R40', 'Cyclist_3d/moderate_R40' ]
        }

    KD_TRANS_BLOCK:
        ENABLED: True
        NAME: KDPointTrans_cp
#        ANCHOR_NUM_PER_LOCATION: 6

        NMS_CONFIG:
            TRAIN:
                NMS_TYPE: nms_gpu
                MULTI_CLASSES_NMS: False
                USE_FAST_NMS: False
                SCORE_THRESH: 0.0
                SCORE_THRESH_MINOR: 0.1
                NMS_PRE_MAXSIZE: 4096
                NMS_POST_MAXSIZE: 500
                NMS_THRESH: 0.1

            POST_CONFIG:
                SCORE_THRESH: 0.1
                POST_CENTER_LIMIT_RANGE: [ 0, -40, -3, 70.4, 40, 1 ]
                MAX_OBJ_PER_SAMPLE: 500
                HEAD_ORDER: [ 'center', 'center_z', 'dim', 'rot' ]
                FEATURE_MAP_STRIDE: 8
                NMS_TYPE: nms_gpu



OPTIMIZATION:
    BATCH_SIZE_PER_GPU: 4
    NUM_EPOCHS: 80

    OPTIMIZER: adam_onecycle
    LR: 0.003
    WEIGHT_DECAY: 0.01
    MOMENTUM: 0.9

    MOMS: [0.95, 0.85]
    PCT_START: 0.4
    DIV_FACTOR: 10
    DECAY_STEP_LIST: [35, 45]
    LR_DECAY: 0.1
    LR_CLIP: 0.0000001

    LR_WARMUP: False
    WARMUP_EPOCH: 1

    GRAD_NORM_CLIP: 10

    REMAP_PRETRAIN:
        ENABLED: False
        WAY: BN_SCALE
        BN_SCALE:
            ABS: True
        OFA:
            l1_norm: max

MODEL_TEACHER:
    IS_TEACHER: True
    NAME: PartA2Net

    VFE:
      NAME: MeanVFE

    BACKBONE_3D:
      NAME: UNetV2

    MAP_TO_BEV:
      NAME: HeightCompression
      NUM_BEV_FEATURES: 256

    BACKBONE_2D:
      NAME: BaseBEVBackbone

      LAYER_NUMS: [ 5, 5 ]
      LAYER_STRIDES: [ 1, 2 ]
      NUM_FILTERS: [ 128, 256 ]
      UPSAMPLE_STRIDES: [ 1, 2 ]
      NUM_UPSAMPLE_FILTERS: [ 256, 256 ]

    DENSE_HEAD:
      NAME: AnchorHeadSingle
      CLASS_AGNOSTIC: False

      USE_DIRECTION_CLASSIFIER: True
      DIR_OFFSET: 0.78539
      DIR_LIMIT_OFFSET: 0.0
      NUM_DIR_BINS: 2

      ANCHOR_GENERATOR_CONFIG: [
        {
          'class_name': 'Car',
          'anchor_sizes': [ [ 3.9, 1.6, 1.56 ] ],
          'anchor_rotations': [ 0, 1.57 ],
          'anchor_bottom_heights': [ -1.78 ],
          'align_center': False,
          'feature_map_stride': 8,
          'matched_threshold': 0.6,
          'unmatched_threshold': 0.45
        },
        {
          'class_name': 'Pedestrian',
          'anchor_sizes': [ [ 0.8, 0.6, 1.73 ] ],
          'anchor_rotations': [ 0, 1.57 ],
          'anchor_bottom_heights': [ -1.78 ],
          'align_center': False,
          'feature_map_stride': 8,
          'matched_threshold': 0.5,
          'unmatched_threshold': 0.35
        },
        {
          'class_name': 'Cyclist',
          'anchor_sizes': [ [ 1.76, 0.6, 1.73 ] ],
          'anchor_rotations': [ 0, 1.57 ],
          'anchor_bottom_heights': [ -1.78 ],
          'align_center': False,
          'feature_map_stride': 8,
          'matched_threshold': 0.5,
          'unmatched_threshold': 0.35
        }
      ]

      TARGET_ASSIGNER_CONFIG:
        NAME: AxisAlignedTargetAssigner
        POS_FRACTION: -1.0
        SAMPLE_SIZE: 512
        NORM_BY_NUM_EXAMPLES: False
        MATCH_HEIGHT: False
        BOX_CODER: ResidualCoder

      LOSS_CONFIG:
        LOSS_WEIGHTS: {
          'cls_weight': 1.0,
          'loc_weight': 2.0,
          'dir_weight': 0.2,
          'code_weights': [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ]
        }

    POINT_HEAD:
      NAME: PointIntraPartOffsetHead
      CLS_FC: [ ]
      PART_FC: [ ]
      CLASS_AGNOSTIC: True
      TARGET_CONFIG:
        GT_EXTRA_WIDTH: [ 0.2, 0.2, 0.2 ]
      LOSS_CONFIG:
        LOSS_REG: smooth-l1
        LOSS_WEIGHTS: {
          'point_cls_weight': 1.0,
          'point_part_weight': 1.0
        }

    ROI_HEAD:
      NAME: PartA2FCHead
      CLASS_AGNOSTIC: True

      SHARED_FC: [ 256, 256, 256 ]
      CLS_FC: [ 256, 256 ]
      REG_FC: [ 256, 256 ]
      DP_RATIO: 0.3

      SEG_MASK_SCORE_THRESH: 0.3

      NMS_CONFIG:
        TRAIN:
          NMS_TYPE: nms_gpu
          MULTI_CLASSES_NMS: False
          NMS_PRE_MAXSIZE: 9000
          NMS_POST_MAXSIZE: 512
          NMS_THRESH: 0.8
        TEST:
          NMS_TYPE: nms_gpu
          MULTI_CLASSES_NMS: False
          NMS_PRE_MAXSIZE: 1024
          NMS_POST_MAXSIZE: 100
          NMS_THRESH: 0.7

      ROI_AWARE_POOL:
        POOL_SIZE: 12
        NUM_FEATURES: 128
        MAX_POINTS_PER_VOXEL: 128

      TARGET_CONFIG:
        BOX_CODER: ResidualCoder
        ROI_PER_IMAGE: 128
        FG_RATIO: 0.5

        SAMPLE_ROI_BY_EACH_CLASS: True
        CLS_SCORE_TYPE: roi_iou

        CLS_FG_THRESH: 0.75
        CLS_BG_THRESH: 0.25
        CLS_BG_THRESH_LO: 0.1
        HARD_BG_RATIO: 0.8

        REG_FG_THRESH: 0.65

      LOSS_CONFIG:
        CLS_LOSS: BinaryCrossEntropy
        REG_LOSS: smooth-l1
        CORNER_LOSS_REGULARIZATION: True
        LOSS_WEIGHTS: {
          'rcnn_cls_weight': 1.0,
          'rcnn_reg_weight': 1.0,
          'rcnn_corner_weight': 1.0,
          'code_weights': [ 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ]
        }

    POST_PROCESSING:
      RECALL_THRESH_LIST: [ 0.3, 0.5, 0.7 ]
      SCORE_THRESH: 0.1
      OUTPUT_RAW_SCORE: False

      EVAL_METRIC: kitti
      EVAL_CLASSES: {
        'BEV': [ 'Car_bev/moderate_R40', 'Pedestrian_bev/moderate_R40', 'Cyclist_bev/moderate_R40' ],
        '3D': [ 'Car_3d/moderate_R40', 'Pedestrian_3d/moderate_R40', 'Cyclist_3d/moderate_R40' ]
      }

      NMS_CONFIG:
        MULTI_CLASSES_NMS: False
        NMS_TYPE: nms_gpu
        NMS_THRESH: 0.1
        NMS_PRE_MAXSIZE: 4096
        NMS_POST_MAXSIZE: 500


KD:
    ENABLED: True
    TEACHER_MODE: eval # train or eval
    DIFF_VOXEL: False

    MASK:
        SCORE_MASK: False
        FG_MASK: False
        BOX_MASK: False
        DIF_MASK: True

    LOGIT_KD:
        ENABLED: False
        # decode prediction to bounding boxes or not in logit kd
        MODE: raw_pred # [raw_pred, decoded_boxes, target]
        ALIGN: {
            MODE: interpolate,
            target: teacher,
            mode: bilinear, # nearest, linear, bilinear, bicubic, trilinear, area
            align_corners: True,
            align_channel: False
        }

    FEATURE_KD:
        ENABLED: True

        FEATURE_NAME: cls_preds
        FEATURE_NAME_TEA: cls_preds

        # Align feature map
        ALIGN: {
            ENABLED: False,
            MODE: interpolate,
            target: teacher,

          # interpolate params
            mode: bilinear, # nearest, linear, bilinear, bicubic, trilinear, area
            align_corners: True,
            align_channel: False,

          # conv params
            num_filters: [192, 384], # [in_channel, out_channel]
            use_norm: True,
            use_act: False,
            kernel_size: 3,
            groups: 1,
        }

        ROI_POOL:
            ENABLED: True
            GRID_SIZE: 7
            DOWNSAMPLE_RATIO: 1
            ROI: gt # ['gt', 'tea', 'stu']
            THRESH: 0.0 # for teacher prediction for student prediction

    LABEL_ASSIGN_KD:
        ENABLED: False
        SCORE_TYPE: cls
        USE_GT: True
        GT_FIRST: False # when concatenate the gt boxes and target predictions,
        # target boxes selection
        SCORE_THRESH: [ 0.6, 0.6, 0.6 ]

    NMS_CONFIG:
        ENABLED: False
        NMS_TYPE: nms_gpu
        NMS_THRESH: 0.7
        NMS_PRE_MAXSIZE: 4096
        NMS_POST_MAXSIZE: 500


KD_LOSS:
    ENABLED: True
    HM_LOSS: {
        type: MSELoss,
        weight: 10.0,
        thresh: 0.3,  # threshold for score PP Logit KD
        tea_mask_anchor: True,
#        soft_mask: True,
        rank: -1,  # rank PP Logit KD, -1 means not used
        sigmoid: True
    }

    REG_LOSS: {
        type: WeightedSmoothL1Loss,
        # for L1 loss only
        code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
        weight: 0.2
    }

    FEATURE_LOSS: {
        mode: point,
        type: MSELoss, # [SmoothL1Loss, MSELoss]
        weight: 0.0,
        weight_reverse: 0.1,

    }
